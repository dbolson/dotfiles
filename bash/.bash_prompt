COLOR_CYAN="\033[0;36m"
COLOR_GREEN="\033[0;32m"
COLOR_OCHRE="\033[38;5;95m"
COLOR_RED="\033[0;31m"
COLOR_RESET="\033[0m"
COLOR_WHITE="\033[0;37m"
COLOR_YELLOW="\033[0;33m"

function git_color {
  local git_status
  git_status="$(git status 2> /dev/null)"

  if [[ ! $git_status =~ "working tree clean" ]]; then
    echo -e "$COLOR_RED"
  elif [[ $git_status =~ "Your branch is ahead of" ]]; then
    echo -e "$COLOR_YELLOW"
  elif [[ $git_status =~ "nothing to commit" ]]; then
    echo -e "$COLOR_GREEN"
  else
    echo -e "$COLOR_OCHRE"
  fi
}

function git_branch {
  local git_status
  local on_branch
  local on_commit
  git_status="$(git status 2> /dev/null)"
  on_branch="On branch ([^${IFS}]*)"
  on_commit="HEAD detached at ([^${IFS}]*)"

  if [[ $git_status =~ $on_branch ]]; then
    local branch=${BASH_REMATCH[1]}
    echo "$branch"
  elif [[ $git_status =~ $on_commit ]]; then
    local commit=${BASH_REMATCH[1]}
    echo "$commit"
  fi
}

function git_stash {
  local stash_status=$(git stash list 2> /dev/null | tail -n1)
  local regex="stash@\{([0-9]+)\}"

  if [[ $stash_status =~ $regex ]]
  then
    local stash_length="${BASH_REMATCH[1]}"
    echo "{$(( stash_length + 1 ))}"
  fi
}

function git_status {
  local branch_status=$(git_branch)
  local stash_status=$(git_stash)

  if [[ $branch_status != "" ]]
  then
    if [[ $stash_status == "" ]]
    then
      echo "$branch_status"
    else
      echo "$branch_status $stash_status"
    fi
  fi

}

PS1="\[\$(git_color)\]" # colors git status
PS1+="\$(git_status) " # prints current branch
PS1+="\[$COLOR_CYAN\]\W" # basename of pwd
PS1+="\[$COLOR_RESET\] "
export PS1
